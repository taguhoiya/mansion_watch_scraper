name: CI Checks

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  MONGO_URI: mongodb://localhost:27017
  MONGO_DATABASE: mansion_watch
  COLLECTION_PROPERTIES: properties
  COLLECTION_USER_PROPERTIES: user_properties
  COLLECTION_PROPERTY_OVERVIEWS: property_overviews
  COLLECTION_COMMON_OVERVIEWS: common_overviews
  COLLECTION_PROPERTY_IMAGES: property_images
  COLLECTION_USERS: users
  IMAGES_STORE: tmp/images
  GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GCP_BUCKET_NAME: ${{ secrets.GCP_BUCKET_NAME }}
  GCP_FOLDER_NAME: property_images
  GCS_IMAGE_QUALITY: 30
  LOG_LEVEL: DEBUG
  LINE_CHANNEL_SECRET: ${{ secrets.LINE_CHANNEL_SECRET }}
  LINE_CHANNEL_ACCESS_TOKEN: ${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
  GOOGLE_APPLICATION_CREDENTIALS: service-account.json

jobs:
  unit-tests:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip" # caching pip dependencies

      - name: Install Python dependencies
        run: pip install -r requirements.txt

      - name: Create mock service account file
        run: |
          echo '{"type": "service_account"}' > service-account.json

      - name: Sort imports
        run: isort .

      - name: Lint with black
        run: black .

      - name: Lint with flake8
        run: flake8 .

      - name: Run tests with coverage
        run: make test-cov
        # The test will fail if coverage is below 50% due to --cov-fail-under=50 in pytest.ini

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

  # deploy:
  #   if: github.ref == 'refs/heads/main'
  #   needs: lint
  #   runs-on: ubuntu-latest

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: Authenticate to Google Cloud
  #       uses: google-github-actions/auth@v2
  #       with:
  #         project_id: ${{ secrets.GCP_PROJECT }}
  #         workload_identity_provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
  #         service_account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

  # TODO: Uncomment the following lines to deploy to Google App Engine
  # - name: Deploy to Google App Engine
  #   uses: 'google-github-actions/deploy-appengine@v2'
  #   with:
  #     project_id: ${{ secrets.GCP_PROJECT }}
  #     deliverables: app.yaml
